#summary How to run your own version of the Silenus web service.

= Introduction =

Silenus also provides an online [http://www.castlequest.be/silenus web service] that allows you to upload your own FLA file (up to 2MB) and render the animation in your browser, as well as allowing you to export the JSON data for usage later.

Our own service will only remain up if we can maintain the bandwidth and memory usage. However, it is very easy to set up your own version of the web service for personal use. All you need is a standard servlet environment, such as Tomcat. This also allows you to override the default file size and upload files as large as you want.

All you need to do to deploy your own Silenus web service is download the silenus-gwt.war file, and deploy it to the environment (for example, through the Tomcat /manager interface).

If you want to change the max file size, you should download the war directory from the [http://code.google.com/p/silenus/source/browse/#svn%2Ftrunk%2Fsilenus-gwt%2Fwar source tree] and open WEB-INF/web.xml. You can change the `silenus.maxSize` context parameter to any value you want. Restarting the servlet will load the correct value and allow larger-size uploads.


= JSON format =

The web service also sends back the full JSON data to reproduce the animation in any programming language or framework you want. It has a very simple structure, which speaks mostly for itself:

{{{
{
    "frameRate": 24,
    "width": 500,
    "height": 320,
    "bitmaps": [
        "example_05.png",
        "example_02.png"
    ],
    "frames": [
        [
            {
                "translate": [
                    -22.65,
                    -16.15
                ],
                "scale": [
                    1,
                    1
                ],
                "rotation": 0,
                "bitmap": "example_05.png"
            },
            {
                "translate": [
                    263.85,
                    113.85
                ],
                "scale": [
                    1,
                    1
                ],
                "rotation": 0,
                "bitmap": "example_02.png"
            }
        ],
        [
            {
                "translate": [
                    -16.935714285714287,
                    -10.721428571428572
                ],
                "scale": [
                    1,
                    1
                ],
                "rotation": 0,
                "bitmap": "example_02.png",
                "colorManipulation": {
                    "alphaMultiplier": 1,
                    "redMultiplier": 1,
                    "greenMultiplier": 1,
                    "blueMultiplier": 1,
                    "alphaOffset": 0,
                    "redOffset": 0,
                    "greenOffset": 0,
                    "blueOffset": 0
                }
            }
        ]
    ]
}
}}}

Not every bitmap must occur in every frame; sometimes bitmaps disappear and appear again in the animation, but they usually don't.

In order to draw an image, first apply the translation, followed by scaling, and finally followed by rotation. If a colorManipulation object is provided, it is populated with a set of color multipliers and offsets that need to be applied to the image first before drawing. The correct formula is: `red_destination = red_source * redMultiplier + redOffset`.

Finally, draw the image at the origin so that the top left of the image is exactly at the origin. This will result in a perfect reconstruction of that frame as it was in the original flash animation.